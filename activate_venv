#!/bin/bash

# Bootstrap a new VEnv in ./_smrtino_venv suitable for running SMRTino.
# The idea is that we make a new VEnv for each version released and so
# we really can roll back to an old version and get the exact same
# behaviour.

if [[ "$0" == "$BASH_SOURCE" ]] ; then
    echo "You need to source this file, not run it."
    exit 1
fi

activate_venv() {
    #We need to ensure -u is not set but then put the old value back.
    local reset=$(set +o | grep -w nounset) ; set +o nounset
    source ./_smrtino_venv/bin/activate
    eval $reset
}

pip_install() {
    # Send all output to stdout
    pip3 --disable-pip-version-check install --prefer-binary "$@" 2>&1
}

check_setuptools() {
    # I compiled python and _ctypes was broken but pip masks the real error,
    # so run this check explicitly.
    python3 -c 'import setuptools'
}

if [ -e ./_smrtino_venv/bin/activate ] ; then

    # We already got one!
    activate_venv

else
    ( set -e ;
        # Best to resolve the symlink before bootstrapping the VEnv
        _py3="${TOOLBOX:-`dirname $BASH_SOURCE`/toolbox}"/bootstrap_python3
        _py3_real="$(readlink -m "$_py3")"
        echo "Bootstrapping new VEnv from $_py3 ($_py3_real)"
        "$_py3_real" -mvenv ./_smrtino_venv
        activate_venv

        # We need to upgrade pip so that --prefer-binary is a valid option
        pip3 --disable-pip-version-check install --upgrade 'pip>22' 2>&1

        # A check that the Python is not broken
        check_setuptools

        pip_install wheel
        pip_install pyyaml==6.0
        pip_install 'yamlloader<2'
        pip_install 'rt<3'

        # My test helper
        pip_install bashmocker==0.3.0

        # For access the Clarity
        #pip_install pyclarity_lims==0.4.8
        #pip_install psycopg2-binary

        # things needed for Blobtools - we are using
        # https://github.com/EdinburghGenomics/blobtools/tree/tims_patches
        pip_install docopt==0.6.2
        pip_install matplotlib==3.3.3
        pip_install pysam==0.22.0
        pip_install tqdm==4.66.1
        pip_install ujson==5.8.0

        # snakemake and drmaa (note the settings/wrapper in shell_helper_functions.sh)
        pip_install yte==1.5.1
        pip_install tabulate==0.9.0
        pip_install reretry==0.11.1
        pip_install throttler==1.2.1
        pip_install snakemake==7.18.2
        pip_install drmaa==0.7.9

        # My patches for Snakemake bugs : 'v7.18.2.x'
        # Not needed for unit tests
        pip_install 'git+https://github.com/EdinburghGenomics/snakemake.git@main#egg=snakemake'

        # Helpful for running the unit tests
        pip_install pyflakes
    )

    if [ $? = 0 ] ; then
        echo "VEnv provisioned OK"
        # We need this since we quit the subshell
        activate_venv
    else
        unset -f pip_install
        echo "Provisioning VEnv Failed!"
        false
    fi
fi
